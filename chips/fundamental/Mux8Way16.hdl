// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       c if sel =  010
 *       d if sel =  011
 *       e if sel =  100
 *       f if sel =  101
 *       g if sel =  110
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Because it is alternating, we can eliminate the curr and its immediate neighbour
    Mux16(a=a,b=b,sel=sel[0],out=firstQuarter); 
   	Mux16(a=c,b=d,sel=sel[0],out=secondQuarter);
	Mux16(a=e,b=f,sel=sel[0],out=thirdQuarter); 
   	Mux16(a=g,b=h,sel=sel[0],out=fourthQuarter);

    // Because each quarter is different in sel[1], we can eliminate them again
	Mux16(a=firstQuarter,b=secondQuarter,sel=sel[1],out=firstHalf);
	Mux16(a=thirdQuarter,b=fourthQuarter,sel=sel[1],out=secondHalf);

	Mux16(a=firstHalf,b=secondHalf,sel=sel[2],out=out);
}